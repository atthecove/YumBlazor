@page "/category"
@inject ICategoryRepository _categoryRepository

@if (IsProcessing)
{
	<div class="position-absolute m-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
		<img src="/images/loading.gif" alt="Loading" />
	</div>
}
else
{
	<div class="card shadow border-0 mt-4">
		<div class="card-header bg-black bg-gradient ml-0 py-3">
			<div class="row">
				<div class="col-12 text-center">
					<h2 class="text-white py-2">Category List</h2>
				</div>
			</div>
		</div>
		<div class="card-body p-4">
			<div class="row pb-3">
				<div class="col-12 text-end">
					<a href="category/create" class="btn btn-lg btn-secondary" style="width:250px;">
						<i class="bi bi-plus-square"></i>&nbsp;Add New Category
					</a>
				</div>
			</div>
			@if (Categories.Any())
			{
				<table class="table table-bordered table-striped">
					<thead>
						<tr>
							<th>Name</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var obj in Categories)
						{
							<tr>
								<td>
									@obj.Name
								</td>
								<td>
									<a href="@($"category/update/{obj.Id}")" class="btn btn-primary"><i class="bi bi-pencil-square"></i>Edit</a>
									<button class="btn btn-danger"><i class="bi bi-trash3"></i>Delete</button>
								</td>
							</tr>
						}
					</tbody>
				</table>
			}

		</div>

	</div>
}

@code {
	private bool IsProcessing { get; set; } = true;
	private IEnumerable<Category> Categories { get; set; } = new List<Category>();

	protected override async Task OnInitializedAsync()
	{
		//IsProcessing = true;
			//await Task.Delay(1);
			//await Task.Yield();
		//await LoadCategories();
			//Thread.Sleep(5000);
		//IsProcessing = false;
	}

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (firstRender)
		{
			//IsProcessing = true;
			//StateHasChanged();
			await LoadCategories();
			IsProcessing = false;
			StateHasChanged();
		}
		//return base.OnAfterRenderAsync(firstRender);
	}

	private async Task LoadCategories()
	{
		//Thread.Sleep(5000);
		Categories = await _categoryRepository.GetAllAsync();
	}
}
